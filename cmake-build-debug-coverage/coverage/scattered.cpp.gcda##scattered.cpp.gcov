        -:    0:Source:/home/jebbin/CLionProjects/typo/src/scattered.cpp
        -:    0:Graph:/home/jebbin/CLionProjects/typo/cmake-build-debug-coverage/CMakeFiles/typo.dir/src/scattered.cpp.gcno
        -:    0:Data:/home/jebbin/CLionProjects/typo/cmake-build-debug-coverage/CMakeFiles/typo.dir/src/scattered.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by jebbin on 07/04/21.
        -:    3://
        -:    4:
        -:    5:#include "scattered.h"
        -:    6:#include "ScatteredSprite.h"
        -:    7:#include "wordlist.h"
        -:    8:#include <ctime>
        -:    9:#include <iostream>
        -:   10:#include <cstdlib>
        -:   11:#include <vector>
        -:   12:#include <SDL2/SDL.h>
        -:   13:
function _ZN9ScatteredC2EP6Windowt called 1 returned 100% blocks executed 47%
        1:   14:Scattered::Scattered(Window *window, unsigned short difficulty) :
        -:   15:        Game(window),
        1:   16:        difficulty(difficulty) {
        1:   16-block  0
call    0 returned 1
    $$$$$:   16-block  1
call    1 never executed
        1:   17:    keystroke = new sound("./../res/keystroke.wav", 10);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   17-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   17-block  1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   17-block  2
call   10 returned 1
call   11 returned 1
    $$$$$:   17-block  3
call   12 never executed
    $$$$$:   17-block  4
call   13 never executed
    $$$$$:   17-block  5
    $$$$$:   17-block  6
call   14 never executed
    $$$$$:   17-block  7
        1:   18:    error = new sound("./../res/error.wav", 15);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   18-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   18-block  1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   18-block  2
call   10 returned 1
call   11 returned 1
    $$$$$:   18-block  3
call   12 never executed
    $$$$$:   18-block  4
call   13 never executed
    $$$$$:   18-block  5
    $$$$$:   18-block  6
call   14 never executed
    $$$$$:   18-block  7
        1:   19:}
        -:   20:
        -:   21:Scattered::~Scattered() = default;
        -:   22:
function _ZN9Scattered5startEv called 1 returned 100% blocks executed 82%
        1:   23:void Scattered::start() {
        -:   24:    int w, h, spriteW, spriteH, xRand, yRand;
        2:   25:    std::string word;
        1:   25-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:   25-block  1
call    2 never executed
        -:   26:    unsigned int sym;
        1:   27:    SDL_GetWindowSize(window->get_window(), &w, &h);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   28:    float percent = 1;
        -:   29:
        2:   30:    std::vector<Sprite> sprites;
        1:   30-block  0
call    0 returned 1
        1:   30-block  1
call    1 returned 1
    $$$$$:   30-block  2
call    2 never executed
        -:   31:
        1:   32:    std::srand(std::time(nullptr));
call    0 returned 1
call    1 returned 1
        -:   33:
      101:   34:    for (int k = 0; k < 100; k++) {
      101:   34-block  0
branch  0 taken 100 (fallthrough)
branch  1 taken 1
      100:   34-block  1
      100:   35:        word = words[std::rand() % words.size()];
      100:   35-block  0
call    0 returned 100
call    1 returned 100
call    2 returned 100
call    3 returned 100
branch  4 taken 100 (fallthrough)
branch  5 taken 0 (throw)
      100:   36:        TTF_SizeUTF8(TextSprite::font, word.c_str(), &spriteW, &spriteH);
      100:   36-block  0
call    0 returned 100
call    1 returned 100
branch  2 taken 100 (fallthrough)
branch  3 taken 0 (throw)
      100:   37:        xRand = std::rand() % w;
      100:   37-block  0
call    0 returned 100
      100:   38:        if (xRand + spriteW > w) {
branch  0 taken 3 (fallthrough)
branch  1 taken 97
        3:   39:            xRand -= (xRand + spriteW) - w;
        3:   40:            xRand -= 20;
        3:   40-block  0
        -:   41:        }
      100:   42:        yRand = std::rand() % h;
      100:   42-block  0
call    0 returned 100
      100:   43:        if (yRand + spriteH > h) {
branch  0 taken 14 (fallthrough)
branch  1 taken 86
       14:   44:            yRand -= (yRand + spriteH) - h;
       14:   45:            yRand -= 25;
       14:   45-block  0
        -:   46:        }
      100:   47:        struct Sprite s = {new ScatteredSprite(Window::renderer,
        -:   48:                                               word.c_str(),
      100:   49:                                               {255, 255, 255, 255}),
      100:   49-block  0
call    0 returned 100
branch  1 taken 100 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   49-block  1
call    3 never executed
      200:   50:                           xRand, yRand, spriteW, spriteH, 0};
      100:   50-block  0
call    0 returned 100
call    1 returned 100
call    2 returned 100
branch  3 taken 100 (fallthrough)
branch  4 taken 0 (throw)
      100:   50-block  1
call    5 returned 100
branch  6 taken 100 (fallthrough)
branch  7 taken 0 (throw)
      100:   50-block  2
call    8 returned 100
call    9 returned 100
    $$$$$:   50-block  3
    $$$$$:   50-block  4
call   10 never executed
    $$$$$:   50-block  5
    $$$$$:   50-block  6
call   11 never executed
    $$$$$:   50-block  7
      100:   51:        sprites.push_back(s);
call    0 returned 100
branch  1 taken 100 (fallthrough)
branch  2 taken 0 (throw)
        -:   52:    }
        -:   53:
        1:   54:    std::vector<Sprite>::iterator itr;
        1:   55:    itr = sprites.begin();
        1:   55-block  0
call    0 returned 1
        1:   56:    game_state = RUNNING;
     6562:   57:    while (!window->isClosed() && game_state == RUNNING && itr < sprites.end()) {
     6562:   57-block  0
call    0 returned 6562
branch  1 taken 6561 (fallthrough)
branch  2 taken 1
     6561:   57-block  1
branch  3 taken 6561 (fallthrough)
branch  4 taken 0
     6561:   57-block  2
call    5 returned 6561
call    6 returned 6561
branch  7 taken 6561 (fallthrough)
branch  8 taken 0
     6561:   57-block  3
        1:   57-block  4
     6562:   57-block  5
branch  9 taken 6561 (fallthrough)
branch 10 taken 1
     6561:   57-block  6
     6561:   58:        window->clear();
     6561:   58-block  0
call    0 returned 6561
branch  1 taken 6561 (fallthrough)
branch  2 taken 0 (throw)
     6561:   59:        if (itr->startStamp == 0) {
     6561:   59-block  0
call    0 returned 6561
branch  1 taken 2 (fallthrough)
branch  2 taken 6559
        2:   60:            itr->startStamp = SDL_GetTicks();
        2:   60-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   60-block  1
call    3 returned 2
        -:   61:        }
        -:   62:
     6561:   63:        itr->t->render_cursor();
     6561:   63-block  0
call    0 returned 6561
call    1 returned 6561
branch  2 taken 6561 (fallthrough)
branch  3 taken 0 (throw)
     6561:   64:        itr->t->display(itr->x, itr->y, Window::renderer);
     6561:   64-block  0
call    0 returned 6561
call    1 returned 6561
call    2 returned 6561
call    3 returned 6561
branch  4 taken 6561 (fallthrough)
branch  5 taken 0 (throw)
     6561:   65:        (itr + 1)->t->display((itr + 1)->x, (itr + 1)->y, Window::renderer);
     6561:   65-block  0
call    0 returned 6561
call    1 returned 6561
call    2 returned 6561
call    3 returned 6561
call    4 returned 6561
call    5 returned 6561
call    6 returned 6561
branch  7 taken 6561 (fallthrough)
branch  8 taken 0 (throw)
    $$$$$:   65-block  1
    $$$$$:   65-block  2
    $$$$$:   65-block  3
     6561:   66:        render_bar(itr->x + itr->w, itr->y + itr->h, -1 * itr->w, percent,
     6561:   66-block  0
call    0 returned 6561
call    1 returned 6561
call    2 returned 6561
call    3 returned 6561
call    4 returned 6561
call    5 returned 6561
branch  6 taken 6561 (fallthrough)
branch  7 taken 0 (throw)
        -:   67:                   {255, 255, 255, 255},
        -:   68:                   {0, 0, 0, 0});
        -:   69:
     6561:   70:        sym = poll_events();
     6561:   70-block  0
call    0 returned 6561
branch  1 taken 6561 (fallthrough)
branch  2 taken 0 (throw)
        -:   71:
     6561:   72:        if (sym == SDLK_SPACE || sym == SDLK_RETURN || sym == SDLK_RETURN2) {
     6561:   72-block  0
branch  0 taken 6560 (fallthrough)
branch  1 taken 1
     6560:   72-block  1
branch  2 taken 6560 (fallthrough)
branch  3 taken 0
     6560:   72-block  2
branch  4 taken 0 (fallthrough)
branch  5 taken 6560
        1:   73:            if (itr->t->validate()) {
        1:   73-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   73-block  1
branch  4 taken 1 (fallthrough)
branch  5 taken 0
        -:   74:
        -:   75:            } else {
        1:   76:                error->play();
        1:   76-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   77:            }
        1:   78:            itr++;
        1:   78-block  0
call    0 returned 1
        1:   79:            percent = 1;
        -:   80:        } else {
     6560:   81:            if (sym != 0) {
     6560:   81-block  0
branch  0 taken 5 (fallthrough)
branch  1 taken 6555
        5:   82:                if (sym == 999) {
        5:   82-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 5
    #####:   83:                    itr->t->del_char();
    %%%%%:   83-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:   84:                } else {
        5:   85:                    itr->t->char_in((char) sym);
        5:   85-block  0
call    0 returned 5
call    1 returned 5
branch  2 taken 5 (fallthrough)
branch  3 taken 0 (throw)
        5:   86:                    SDL_log(itr->t->validate_buffer());
        5:   86-block  0
call    0 returned 5
call    1 returned 5
branch  2 taken 5 (fallthrough)
branch  3 taken 0 (throw)
        5:   86-block  1
call    4 returned 5
branch  5 taken 5 (fallthrough)
branch  6 taken 0 (throw)
        -:   87:                }
        -:   88:            }
     6560:   89:            if ((float) (SDL_GetTicks() - itr->startStamp) >= (difficulty * 1000.0)) {
     6560:   89-block  0
call    0 returned 6560
branch  1 taken 6560 (fallthrough)
branch  2 taken 0 (throw)
     6560:   89-block  1
call    3 returned 6560
branch  4 taken 0 (fallthrough)
branch  5 taken 6560
    #####:   90:                itr++;
    %%%%%:   90-block  0
call    0 never executed
    #####:   91:                percent = 1;
        -:   92:            } else {
     6560:   93:                percent = 1 - (float) (SDL_GetTicks() - itr->startStamp) / (difficulty * 1000.0);
     6560:   93-block  0
call    0 returned 6560
branch  1 taken 6560 (fallthrough)
branch  2 taken 0 (throw)
     6560:   93-block  1
call    3 returned 6560
        -:   94:            }
        -:   95:        }
        -:   96:    }
        1:   97:}
        -:   98:
function _ZN9Scattered5pauseEv called 0 returned 0% blocks executed 0%
    #####:   99:void Scattered::pause() {
    #####:  100:    game_state = PAUSED;
    #####:  101:}
        -:  102:
function _ZN9Scattered11poll_eventsEv called 6561 returned 100% blocks executed 88%
     6561:  103:unsigned int Scattered::poll_events() {
        -:  104:    SDL_Event event;
        -:  105:
     6561:  106:    if (SDL_PollEvent(&event)) {
     6561:  106-block  0
call    0 returned 6561
branch  1 taken 6561 (fallthrough)
branch  2 taken 0 (throw)
     6561:  106-block  1
branch  3 taken 57 (fallthrough)
branch  4 taken 6504
       57:  107:        switch (event.type) {
       57:  107-block  0
branch  0 taken 1
branch  1 taken 5
branch  2 taken 51
        1:  108:            case SDL_QUIT:
        1:  109:                window->close();
        1:  109-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  110:                break;
        1:  110-block  0
        5:  111:            case SDL_KEYDOWN:
        5:  112:                keystroke->play();
        5:  112-block  0
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
        5:  113:                if (event.key.keysym.sym == SDLK_BACKSPACE)
        5:  113-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 5
      56*:  114:                    return 999;
    %%%%%:  114-block  0
       56:  114-block  1
        5:  115:                else if (event.key.keysym.sym == SDLK_ESCAPE) {
        5:  115-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 5
    #####:  116:                    game_state = PAUSED;
    #####:  117:                    break;
    %%%%%:  117-block  0
        -:  118:                }
        5:  119:                return event.key.keysym.sym;
        5:  119-block  0
       51:  120:            default:
       51:  121:                return 0;
       51:  121-block  0
        -:  122:        }
        -:  123:    }
     6505:  124:}
     6505:  124-block  0
        -:  125:
function _ZN9Scattered10render_barEiiif9SDL_ColorS0_ called 6561 returned 100% blocks executed 86%
     6561:  126:void Scattered::render_bar(int x, int y, int w, float Percent, SDL_Color FGColor, SDL_Color BGColor) {
    6561*:  127:    Percent = Percent > 1.f ? 1.f : Percent < 0.f ? 0.f : Percent;
     6561:  127-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 6561
    %%%%%:  127-block  1
     6561:  127-block  2
branch  2 taken 0 (fallthrough)
branch  3 taken 6561
    %%%%%:  127-block  3
     6561:  127-block  4
     6561:  127-block  5
        -:  128:    SDL_Color old;
     6561:  129:    SDL_GetRenderDrawColor(Window::renderer, &old.r, &old.g, &old.g, &old.a);
     6561:  129-block  0
call    0 returned 6561
branch  1 taken 6561 (fallthrough)
branch  2 taken 0 (throw)
     6561:  130:    SDL_Rect bgRect = {x, y, w, 3};
     6561:  131:    SDL_SetRenderDrawColor(Window::renderer, BGColor.r, BGColor.g, BGColor.b, BGColor.a);
     6561:  131-block  0
call    0 returned 6561
branch  1 taken 6561 (fallthrough)
branch  2 taken 0 (throw)
     6561:  132:    SDL_RenderFillRect(Window::renderer, &bgRect);
     6561:  132-block  0
call    0 returned 6561
branch  1 taken 6561 (fallthrough)
branch  2 taken 0 (throw)
     6561:  133:    SDL_SetRenderDrawColor(Window::renderer, FGColor.r, FGColor.g, FGColor.b, FGColor.a);
     6561:  133-block  0
call    0 returned 6561
branch  1 taken 6561 (fallthrough)
branch  2 taken 0 (throw)
     6561:  134:    int pw = (int) ((float) w * Percent);
     6561:  135:    int px = x + (w - pw);
     6561:  136:    SDL_Rect fgRect = {px, y, pw, 3};
     6561:  137:    SDL_RenderFillRect(Window::renderer, &fgRect);
     6561:  137-block  0
call    0 returned 6561
branch  1 taken 6561 (fallthrough)
branch  2 taken 0 (throw)
     6561:  138:    SDL_SetRenderDrawColor(Window::renderer, old.r, old.g, old.b, old.a);
     6561:  138-block  0
call    0 returned 6561
branch  1 taken 6561 (fallthrough)
branch  2 taken 0 (throw)
     6561:  139:}
     6561:  139-block  0
